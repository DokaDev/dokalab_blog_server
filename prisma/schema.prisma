// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BoardGroup {
  id    Int    @id @default(autoincrement())
  title String  @db.VarChar(120)

  description String?

  boards Board[]

  @@map("board_group")
}

model Board {
  id Int @id @default(autoincrement())

  title String  @db.VarChar(120)
  slug  String @unique  @db.VarChar(40) // B-tree 인덱스 자동생성

  description String?

  // 보드그룹 삭제 정책 고려하여 그룹 미할당 보드 가능성 적용
  boardGroupId Int?  @map("board_group_id")
  boardGroup   BoardGroup? @relation(fields: [boardGroupId], references: [id], onDelete: SetNull) 

  createdAt DateTime  @default(now()) @map("created_at")
  deletedAt DateTime?  @map("deleted_at")

  posts     Post[]

  @@index([boardGroupId])

  @@map("board")
}

model Post {
  id        Int      @id @default(autoincrement())
  postNumber  Int? @map("post_number") // board 내에서의 고유번호, 1부터 시작

  title     String  @db.VarChar(256)
  content   String  @db.Text()

  status    PostStatus @default(DRAFT)

  boardId   Int @map("board_id")
  board     Board       @relation(fields: [boardId], references: [id])

  readTime  Int?  @map("read_time") // minute 단위

  createdAt DateTime @default(now())  @map("created_at")

  publishedAt DateTime? @map("published_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@index([boardId])
  @@index([title])
  @@index([content])
  @@index([postNumber])

  @@map("post")
}

enum PostStatus {
  PUBLISHED
  DRAFT
  DELETED
  @@map("post_status")
}

model PostAttachment {
  id        Int      @id @default(autoincrement())

  uploadState AttachmentUploadState @default(PENDING)

  originalFilename  String  @db.VarChar(256) @map("original_filename")
  key String @db.VarChar(512) // S3 key

  mimeType String  @db.VarChar(128) @map("mime_type")
  size     Int // byte 단위

  uploadedAt DateTime @default(now()) @map("uploaded_at")

  // @@index([])
  @@map("post_attachment")
}

enum AttachmentUploadState {
  PENDING
  READY
  @@map("attachment_upload_state")
}



