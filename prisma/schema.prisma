// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BoardGroup {
  id    Int    @id @default(autoincrement())
  title String  @db.VarChar(120)

  description String?

  boards Board[]

  @@map("board_group")
}

model Board {
  id Int @id @default(autoincrement())

  title String  @db.VarChar(120)
  slug  String @unique  @db.VarChar(100) // B-tree 인덱스 자동생성

  description String?

  // 보드그룹 삭제 정책 고려하여 그룹 미할당 보드 가능성 적용
  boardGroupId Int?  @map("board_group_id")
  boardGroup   BoardGroup? @relation(fields: [boardGroupId], references: [id], onDelete: SetNull) 

  createdAt DateTime  @default(now()) @map("created_at")
  deletedAt DateTime?  @map("deleted_at")

  posts     Post[]

  @@index([boardGroupId])

  @@map("board")
}

model Post {
  id        Int      @id @default(autoincrement())
  postNumber  Int? @map("post_number") // board 내에서의 고유번호, 1부터 시작

  title     String  @db.VarChar(256)
  content   String  @db.Text()

  status    PostStatus @default(DRAFT)

  boardId   Int @map("board_id")
  board     Board       @relation(fields: [boardId], references: [id])

  readTime  Int?  @map("read_time") // minute 단위

  attachments PostAttachment[]

  createdAt DateTime @default(now())  @map("created_at")

  publishedAt DateTime? @map("published_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  postTagRelations PostTagRelation[]

  @@index([boardId])
  @@index([status])           // 상태별 조회
  @@index([publishedAt])      // 발행일순 정렬
  @@index([boardId, status])  // 복합 인덱스 (게시판별 상태 조회)
  @@index([boardId, publishedAt]) // 복합 인덱스 (게시판별 발행일 정렬)
  // @@index([title])         // LIKE 검색용 - 필요시 활성화
  // @@index([content])       // 내용 검색은 full-text 검색 고려
  @@index([createdAt])         // 최신순 정렬용


  @@unique([boardId, postNumber], name: "unique_post_number_per_board")

  @@map("post")
}

enum PostStatus {
  PUBLISHED
  DRAFT
  @@map("post_status")
}

model PostTag {
  id    Int    @id @default(autoincrement())
  name  String  @db.VarChar(50) @unique

  postTagRelations PostTagRelation[]

  createdAt DateTime @default(now()) @map("created_at")

  deletedAt DateTime? @map("deleted_at")

  @@index([name])      // 태그명 자동완성/검색용 (LIKE 'prefix%')
  @@index([createdAt]) // 최신 태그 조회용

  @@map("post_tag")
}

model PostTagRelation {
  postId Int @map("post_id")
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  tagId  Int @map("tag_id")
  tag    PostTag @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([postId, tagId])

  @@index([tagId])   // 태그별 게시글 조회용
  @@index([postId])  // 게시글별 태그 조회용

  @@map("post_tag_relation")
}

model PostAttachment {
  id        Int      @id @default(autoincrement())

  uploadState AttachmentUploadState @default(PENDING)

  originalFilename  String  @db.VarChar(256) @map("original_filename")
  // key String @db.VarChar(512) // S3 key

  mimeType String  @db.VarChar(128) @map("mime_type")
  size     Int // byte 단위

  postId   Int? @map("post_id")
  post     Post?     @relation(fields: [postId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now()) @map("created_at")
  
  uploadExpiresAt  DateTime @map("upload_expires_at") // PENDING 상태에서 일정시간 후 자동삭제용
  commitExpiresAt  DateTime? @map("commit_expires_at") // READY 상태에서 일정시간 후 자동삭제용(업로드는 완료되었으나 게시글에 첨부되지 않은 경우)

  committedAt DateTime? @map("committed_at")

  @@index([postId])           // 게시글별 첨부파일 조회
  @@index([uploadState])      // 업로드 상태별 조회
  @@index([createdAt])       // 시간순 정렬/정리 작업용

  @@index([uploadExpiresAt])  // 업로드 만료시간순 정렬/정리 작업용
  @@index([commitExpiresAt])  // 커밋 만료시간순 정렬/정리 작업용

  @@map("post_attachment")
}

enum AttachmentUploadState {
  PENDING
  READY
  @@map("attachment_upload_state")
}